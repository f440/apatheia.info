<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | apatheia.info]]></title>
  <link href="http://apatheia.info/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://apatheia.info/"/>
  <updated>2013-01-02T16:26:27+09:00</updated>
  <id>http://apatheia.info/</id>
  <author>
    <name><![CDATA[f440]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TumblerからOctopressへの移行]]></title>
    <link href="http://apatheia.info/blog/2012/09/22/tumbler-to-octopress/"/>
    <updated>2012-09-22T17:28:00+09:00</updated>
    <id>http://apatheia.info/blog/2012/09/22/tumbler-to-octopress</id>
    <content type="html"><![CDATA[<p>Tumblerでブログ書いていたけど、ローカルで記事書く => フォームに貼り付け =>
プレビューのサイクルが結構面倒くさいな、と常々思っていたので、Octopressに移行した。</p>

<p>ホスティングには <a href="http://pages.github.com/">Github Pages</a> を利用している。</p>

<!-- more -->


<h2>手順</h2>

<h3>設定</h3>

<pre><code>$ git clone git://github.com/imathis/octopress.git octopress

# テーマ入れ替える    
$ git clone git://github.com/tommy351/Octopress-Theme-Slash.git .themes/slash
$ rake 'install[slash]' # zsh だとクォートなりエスケープするなりしないと、[, ] がメタ文字として解釈される
# .themes/slash/{source,sass} がルートディレクトリにコピーされる
</code></pre>

<p>このままだと header の canonical が設定されないかったので、同梱テンプレート <code>.themes/classic/source/_includes/head.html</code> を参考に <code>./source/_includes/head.html</code> をちょっとといじった。</p>

<h3>Tumbler の記事をインポート</h3>

<p><a href="http://tsurayogoshi.tumblr.com/archive">ブログの過去記事</a>を全部インポートする
( 参考: <a href="http://blog.assimov.net/blog/2012/03/24/tumblr-to-octopress-powered-by-jekyll-and-markdown/">Goodbye Tumblr. Hello, Octopress Powered by Jekyll and Markdown!</a> )</p>

<pre><code>$ wget -O source/tumblr.rb https://raw.github.com/stephenmcd/jekyll/master/lib/jekyll/migrators/tumblr.rb
$ vim source/tumblr.rb # format="md" =&gt; format="markdown" に書き換え
$ ruby -rubygems -e 'require "./source/tumblr"; Jekyll::Tumblr.process("http://tsurayogoshi.tumblr.com", format="markdown", grab_images=true)'
$ mv _posts/tumblr/* source/_posts/
$ mv post source/
</code></pre>

<p>後は細かい調整</p>

<ul>
<li>画像のパスが tumblr を参照しているので、全部ダウンロードして <code>source/images</code>
以下に保存</li>
<li>記事のメタデータ部分

<ul>
<li><code>comments: true</code>を追加</li>
<li><code>tags</code> を <code>categories</code> に書き換え。</li>
</ul>
</li>
<li>各種外部サイト向けパーツの設定</li>
</ul>


<p><code>source/post</code> には、tumbler と同じURLでアクセスしたとき、移行後のコンテンツにア
クセスするリダイレクト設定が入っている。tumbler の頃からカスタムドメインを使っ
ていた場合は、後述のドメイン設定で前と同じドメインにすればいい。</p>

<h3>ドメインの設定</h3>

<p>独自ドメインを使う場合、source/ 以下に CNAME というファイルを作り、そこにドメイ
ンを書いておく。その後、指定の IP アドレスに名前を向ける。</p>

<p>何度かIPアドレスが変更になっているみたいで、別のIPアドレスを利用した説明がネッ
トに残っているけど、古いものだとカスタムドメインが使えるけどusername.github.com
からのカスタムドメインへのリダイレクトが有効にならなかったりするので、ちゃんと
<a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages">公式の説明</a>のもの
を参照すること。</p>

<h3>Github Pages へデプロイ</h3>

<p><a href="http://octopress.org/docs/deploying/github/">ドキュメント</a>を読めばわかるので詳
細は割愛。</p>

<p><code>source</code> ディレクトリの中身が <code>public</code> 以下に展開されて、ここがプレビュー領域と
なる。<code>public</code> の中身が <code>_deploy</code> にコピーされて、ここが Github Pages に push
される。</p>

<p>git リポジトリのうち <code>master</code> ブランチがは公開用、<code>source</code> が編集用となる。ルー
ディレクトリに <code>source</code> ブランチ、公開用の <code>_deploy</code> ディレクトリに <code>maste</code> ブ
ランチという二つのリポジトリが配置されることになる。</p>

<h2>感想</h2>

<p>vim で書く => すぐに確認 => github にデプロイ => 公開の流れは気持ちいい。tumblr の頃と同じく、markdown で書けるのもとても具合がいい。</p>
]]></content>
  </entry>
  
</feed>
