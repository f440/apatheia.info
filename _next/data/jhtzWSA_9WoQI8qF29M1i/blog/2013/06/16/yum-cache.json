{"pageProps":{"post":{"localPath":"/home/f440/go/src/github.com/f440/f440.github.com/content/2013-06-16-yum-cache.markdown","path":"2013/06/16/yum-cache","layout":"post","title":"yum のパッケージキャッシュについて","createdAt":"2013-06-15T16:26:00.000Z","kind":"article","comments":true,"tags":["yum"],"content":"<p><code>/etc/yum.conf</code>で<code>keepcache=1</code>にしておくと、インストールしたパッケージがキャッシュされるようになる。これが無効化された状態だと、パッケージアップグレード時に問題が起きても元に戻せなくなるので有効化しておいた方がいい。</p>\n<!-- more -->\n<p>あるパッケージについて、どのバージョンが利用可能な状態かは以下で確認できる。</p>\n<pre><code>$ sudo yum --showduplicates list パッケージ名\n</code></pre>\n<p>RHEL なら過去のバージョンまですべて手に入るけど、CentOS だとOSリリース時のバージョンと最新版しか手に入らない模様。リポジトリ上なりキャッシュなりで過去のバージョンが手に入るのであれば、<code>yum install</code> や <code>yum update</code> は以下の手順でロールバックが行える。</p>\n<pre><code># yum の利用履歴を確認\n$ sudo yum history\n\n# 履歴から詳細を確認\n# 未引数なら直近、引数ありなら該当する ID を表示\n$ sudo yum history info 4\n\n# 仮に ID 4 で問題のバージョンアップが行われたようだということが確認できたら、その ID を指定して操作をアンドゥ\n$ sudo yum history undo 4\n</code></pre>\n<p>アンドゥ(リドゥもある)では、対象パッケージおよび依存パッケージがまとめて一度に入れ替えられる。これはパッケージの操作がちゃんとトランザクションになっているため。</p>\n<p>話がそれるけど、パッケージの操作にトランザクションがかかるというのはかなり重要だ。たとえば syslog-ng から rsyslog に入れ替えるとき、単純にアンインストール、インストールの順番でやろうとするとアンインストールのタイミングで大量の Syslog 依存なパッケージが道連れになるけど、以下のようにすればひとつのトランザクションでパッケージを入れ替えることができる。(情報源: <a href=\"http://wiki.rsyslog.com/index.php/Install_rsyslog_with_yum\">Rsyslog Wiki</a>)</p>\n<pre><code>$ sudo yum shell\n> remove syslog-ng\n> install rsyslog\n> run\n</code></pre>\n<p>話がそれたついでにふれておくと、vagrant を使っているのであれば <a href=\"https://github.com/fgrehm/vagrant-cachier\">vagrant-cachier</a> を使うとパッケージのキャッシュ保存先を仮想マシン外の領域(ホストOSとの共有ディスク部分など)に変更してくれる。こうすることで、仮想マシンを破棄してもパッケージのキャッシュが永続化されるため、2回目以降はダウンロードがスキップされて高速化する。</p>\n<p>話を戻すと、世の中何が起きるかわからないので古いパッケージもとっておいたほうがいいかと。ディスク容量が気になりだしたら、<code>yum clean packages</code> を実行すればキャッシュは消せる。</p>\n"}},"__N_SSG":true}