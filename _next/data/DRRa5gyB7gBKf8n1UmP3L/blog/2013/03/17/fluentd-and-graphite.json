{"pageProps":{"post":{"localPath":"/home/f440/go/src/github.com/f440/f440.github.com/content/2013-03-17-fluentd-and-graphite.markdown","path":"2013/03/17/fluentd-and-graphite","layout":"post","title":"FluentdのデータをGraphiteに出力するときのTips","createdAt":"2013-03-17T06:50:00.000Z","kind":"article","comments":true,"tags":["fluentd","graphite","logging","visualization"],"content":"<p><a href=\"https://github.com/hotchpotch/fluent-plugin-graphite\">fluent-plugin-graphite</a> 利用時のメモ。</p>\n<p>Ops界隈での可視化というと、ここ何年かは<a href=\"http://graphite.wikidot.com/\">Graphite</a>でグラフを作ってそれを他のツールで表示する、みたいなのが多い。<a href=\"http://fluentd.org/\">Fluentd</a>のデータを可視化したい場合は<a href=\"http://kazeburo.github.com/GrowthForecast/\">GrowthForecast</a>が使われることが多いけど、<a href=\"http://graphite.wikidot.com/\">Graphite</a>使ってみるといろんなツールと組み合わせられておもしろい。</p>\n<!-- more -->\n<p>Fluentd から Graphite へデータを送るのは <a href=\"https://github.com/hotchpotch/fluent-plugin-graphite\">Fluent-plugin-graphite</a> を使えば簡単に実現できそうなんだけど、プラグイン側のインターフェース(<code>:key</code> や <code>:count</code> といったキーが必要)に合わせて入力のデータを整形する必要がある。</p>\n<p>こういった調整は、out_map を使うことで実現できる。</p>\n<pre><code>&#x3C;source>\n  type tail\n  format apache\n  path /var/log/httpd/access_log\n  tag apache.access\n&#x3C;/source>\n&#x3C;match apache.access>\n  type map\n  map [[\"graphite.\" + tag, time, {\"key\" => \"graphite.apache.accesslog.code.\" + record[\"code\"], \"count\" => 1}]]\n  multi true\n&#x3C;/match>\n&#x3C;match graphite.**>\n  type graphite\n&#x3C;/match>\n</code></pre>\n"}},"__N_SSG":true}