{"pageProps":{"post":{"localPath":"/home/f440/go/src/github.com/f440/f440.github.com/content/2013-02-08-create-chocolatey-package.markdown","path":"2013/02/08/create-chocolatey-package","layout":"post","title":"chocolatey で Haskell Platform 用のパッケージを作る","createdAt":"2013-02-08T13:49:00.000Z","kind":"article","comments":true,"tags":["windows","chocolatey","haskell","chef"],"content":"<p><a href=\"http://chocolatey.org/\">chocolatey</a> の仕組みに興味を持ったので、パッケージを作ってみる。</p>\n<!-- more -->\n<p>目標は「<a href=\"http://www.haskell.org/platform/windows.html\">Haskell Platform for Windows</a> からインストーラをダウンロードしてきてサイレントインストール」ができるパッケージを作って、<a href=\"http://chocolatey.org/\">chocolatey</a> のリポジトリにパッケージを登録してみる。</p>\n<h2>作業</h2>\n<h3>パッケージ作成</h3>\n<p><a href=\"https://github.com/chocolatey/chocolatey/wiki/CreatePackages\">ドキュメント</a>では <a href=\"https://github.com/chucknorris/Warmup\">warmup</a> (プロジェクトのひな形を作ったり、そこで生成されたファイル内の文字列を置換したりするプログラム) を使ったやり方が説明されているけど、うまく動かなかったのでガリガリ手作業でやっていく。</p>\n<p>前提として、chocolatey のインストール方法は済んでいるものとする。</p>\n<p>まずはテンプレートを手に入れる。github から直接ファイルをダウンロードでもいいけど、今回の手順では clone してみよう。</p>\n<pre><code># git 入れてなければ インストール\ncinst git\n# パスを通すため、コマンドプロンプトから抜けて新しく立ち上げ直す\n\ncd %ChocolateyInstall%\ngit clone https://github.com/chocolatey/chocolateytemplates.git\ncd chocolateytemplates\\_templates\n</code></pre>\n<p>どこでもいいので、作業用にフォルダを作ってそこにテンプレートをコピーする。</p>\n<pre><code>cd %USERPROFILE%\nmkdir my_templates\ncd my_templates\nxcopy %ChocolateyInstall%\\chocolateytemplates\\_templates\\chocolatey HaskellPlatform /s /e /i\n</code></pre>\n<p>いよいよテンプレートの中身を作っていく。</p>\n<pre><code>cd HaskellPlatform\nren __NAME__.nuspec HaskellPlatform.nuspec \n# HaskellPlatform.nuspec と tools/chocolateyInstall.ps1 を開いてプレースホルダを変更\nnotepad HaskellPlatform.nuspec\nnotepad tools/chocolateyInstall.ps1\n# HaskellPlatform は NSIS 製なので、\n# http://nsis.sourceforge.net/Docs/Chapter3.html#3.2 より、\n# サイレントインストールのためのコマンドラインオプションが /S をつければいい\n</code></pre>\n<p>編集後のファイルは以下の通り</p>\n<ul>\n<li><a href=\"https://github.com/f440/chocolatey-HaskellPlatform/blob/master/HaskellPlatform.nuspec\">HaskellPlatform.nuspec</a></li>\n<li><a href=\"https://github.com/f440/chocolatey-HaskellPlatform/blob/master/tools/chocolateyInstall.ps1\">tools/chocolatey-HaskellPlatform.ps1</a></li>\n</ul>\n<p>パッケージングする。</p>\n<pre><code>cpack\n</code></pre>\n<p>HaskellPlatform.{バージョン番号}.nupkg ができるはず。インストールしてみよう。</p>\n<pre><code>cinst HaskellPlatform -source %cd%\n</code></pre>\n<p>うまくいけば、Haskell のサイレントインストールが始まる。</p>\n<h3>パッケージ登録</h3>\n<p><a href=\"http://chocolatey.org/\">chocolatey</a> にパッケージを登録してみよう。パッケージの登録にはアカウントが必要。</p>\n<p>登録方法は 2 種類。</p>\n<ol>\n<li>アップロードフォームから *.nupkg をアップロード</li>\n<li>API キーを取得して、コマンドラインから push</li>\n</ol>\n<p>1 は簡単すぎるので、2 を試す。事前に <a href=\"http://chocolatey.org/\">chocolatey</a> のアカウント画面から API キーを取得しておこう。</p>\n<pre><code>cinst nuget.commandline\nNuGet SetApiKey &#x3C;your key here> -source http://chocolatey.org/\ncpush HaskellPlatform.{バージョン番号}.nupkg\n</code></pre>\n<p>登録が終われば、他のマシンから <code>cinst HaskellPlatform</code> でインストールできるようになる。</p>\n<h2>まとめ</h2>\n<p>アンインストールの設定が用意されていない、といっただいぶ手抜きなものだけど簡単にできた。</p>\n<p><a href=\"http://chocolatey.org/\">chocolatey</a> 公式の github アカウントでは <a href=\"https://github.com/chocolatey/chocolatey-cookbook\">Chef 用の cookbook</a> を配布している。chef を使って Windows マシンをセットアップするとなると、パッケージマネージャがなければ <a href=\"https://github.com/opscode-cookbooks/windows\">chef-cookbooks/windows</a> (Windows向けのResource/Provider) を使ってインストール方法をちまちま指定していくことになるわけだけど、<a href=\"http://chocolatey.org/\">chocolatey</a> 使えば処理が抽象化できてよさげ。</p>\n<h2>参考</h2>\n<ul>\n<li><a href=\"http://chocolatey.org/\">chocolatey</a></li>\n<li><a href=\"http://www.haskell.org/platform/windows.html\">Haskell Platform for Windows</a></li>\n<li><a href=\"https://github.com/chocolatey/\">chocolateyのgithubアカウント</a></li>\n</ul>\n"}},"__N_SSG":true}