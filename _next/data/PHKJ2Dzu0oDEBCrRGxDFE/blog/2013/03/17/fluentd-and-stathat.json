{"pageProps":{"post":{"localPath":"/home/f440/go/src/github.com/f440/f440.github.com/content/2013-03-17-fluentd-and-stathat.markdown","path":"2013/03/17/fluentd-and-stathat","layout":"post","title":"Fluentdの出力結果をStatHatで可視化する","createdAt":"2013-03-17T06:48:00.000Z","kind":"article","comments":true,"tags":["fluentd","stathat","logging","visualization"],"content":"<p><a href=\"http://fluentd.org/\">Fluentd</a>で取得した情報を可視化したいとき、<a href=\"https://github.com/tagomoris/fluent-plugin-growthforecast\">fluent-plugin-growthforecast</a>を使って<a href=\"http://kazeburo.github.com/GrowthForecast/\">GrowthForecast</a>にグラフを作る方法がよく知られている。<a href=\"http://kazeburo.github.com/GrowthForecast/\">GrowthForecast</a>はインストール後すぐに使い始められるお手軽ツールなんだけど、それすら面倒くさい、自前で環境を作るのが面倒、というときには<a href=\"http://www.stathat.com/\">StatHat</a>を使うと簡単に可視化を実現できるという話。</p>\n<!-- more -->\n<p><a href=\"http://www.stathat.com/\">StatHat</a>はシンプルなインターフェースで必要十分な機能があり、しかも無料で使えるというサービス。HTTPでデータを登録するだけできれいなグラフが簡単に生成できるので、幅広い用途で利用できる。</p>\n<p>以降、<a href=\"http://fluentd.org/\">Fluentd</a>と<a href=\"http://www.stathat.com/\">StatHat</a>を組み合わせて利用するための設定を説明する。</p>\n<h2>作業</h2>\n<h3>StatHat</h3>\n<p>Stathatの<a href=\"https://www.stathat.com/sign_up\">Sign up</a>にアクセスしてメールアドレスを登録し、折り返し届くメール内のURLからパスワードを登録すればすぐ使い始められる。グラフを作るための下準備は不要。まずは、curl を使って直接 POST してみる。</p>\n<pre><code>curl -d \"email=登録時のメールアドレス&#x26;stat=body temperature&#x26;value=36.8\" http://api.stathat.com/ez\n</code></pre>\n<p>すると、メールアドレス宛にグラフの追加が通知され、画面から確認できるようになる。</p>\n<p>(メールアドレスに<code>+</code>みたいなURLエンコードが必要な文字を含んでる場合は、 --data-urlencode を使って一つずつパラメータを指定すればいい)</p>\n<p>APIを利用するために必要となるキーは、初期状態だと登録時のメールアドレスになっている。これは<a href=\"https://www.stathat.com/settings\">設定画面</a>から変更可能。タイムゾーンも修正できるので住んでいる地域に変更しておいた方がいい。</p>\n<h3>Fluentd</h3>\n<p>Fluentd から StatHat を利用するために<a href=\"https://github.com/f440/fluent-plugin-stathat\">プラギン</a>作ったので、これを利用する。</p>\n<pre><code>fluent-gem install fluent-plugin-stathat\n</code></pre>\n<p>たとえば、よくある「HTTP ステータスコードのカウント」の場合、以下のような設定をすればいい。</p>\n<pre><code>&#x3C;source>\n  type tail\n  format apache\n  path /var/log/httpd/access_log\n  tag apache.access\n&#x3C;/source>\n&#x3C;match apache.access>\n  type datacounter\n  unit minute\n  tag stathut.httpstatus\n  count_key code\n  pattern1 2xx ^2\\d\\d$\n  pattern2 3xx ^3\\d\\d$\n  pattern3 4xx ^4\\d\\d$\n  pattern4 5xx ^5\\d\\d$\n&#x3C;/match>\n&#x3C;match stathut.httpstatus>\n  type copy\n  &#x3C;store>\n    type  stathat\n    stat 2xx\n    ezkey your_email@example.com\n    count apache.access_200_count\n  &#x3C;/store>\n  &#x3C;store>\n    type  stathat\n    stat 3xx\n    ezkey your_email@example.com\n    count apache.access_3xx_count\n  &#x3C;/store>\n  &#x3C;store>\n    type  stathat\n    stat 4xx\n    ezkey your_email@example.com\n    count apache.access_4xx_count\n  &#x3C;/store>\n  &#x3C;store>\n    type  stathat\n    stat 5xx\n    ezkey your_email@example.com\n    count apache.access_5xx_count\n  &#x3C;/store>\n&#x3C;/match>\n</code></pre>\n<p>これで、こういったグラフが作れる。</p>\n<p><img src=\"/images/2013-03-17-fluentd-and-stathat/httpstatus.png\" alt=\"httpstatus\">\n<img src=\"/images/2013-03-17-fluentd-and-stathat/4xx.png\" alt=\"4xx\"></p>\n<h2>まとめ</h2>\n<p><a href=\"http://www.stathat.com/\">StatHat</a> 便利。</p>\n"}},"__N_SSG":true}