{"pageProps":{"tag":"stathat","posts":[{"localPath":"/home/f440/go/src/github.com/f440/f440.github.com/content/2013-03-17-fluentd-and-stathat.markdown","path":"blog/2013/03/17/fluentd-and-stathat","layout":"post","title":"Fluentdの出力結果をStatHatで可視化する","createdAt":"2013-03-17T06:48:00.000Z","kind":"article","comments":true,"tags":["fluentd","stathat","logging","visualization"],"content":"\n[Fluentd]で取得した情報を可視化したいとき、[fluent-plugin-growthforecast]を使って[GrowthForecast]にグラフを作る方法がよく知られている。[GrowthForecast]はインストール後すぐに使い始められるお手軽ツールなんだけど、それすら面倒くさい、自前で環境を作るのが面倒、というときには[StatHat]を使うと簡単に可視化を実現できるという話。\n\n<!-- more -->\n\n[StatHat]はシンプルなインターフェースで必要十分な機能があり、しかも無料で使えるというサービス。HTTPでデータを登録するだけできれいなグラフが簡単に生成できるので、幅広い用途で利用できる。\n\n以降、[Fluentd]と[StatHat]を組み合わせて利用するための設定を説明する。\n\n## 作業\n\n### StatHat\n\nStathatの[Sign up](https://www.stathat.com/sign_up)にアクセスしてメールアドレスを登録し、折り返し届くメール内のURLからパスワードを登録すればすぐ使い始められる。グラフを作るための下準備は不要。まずは、curl を使って直接 POST してみる。\n\n    curl -d \"email=登録時のメールアドレス&stat=body temperature&value=36.8\" http://api.stathat.com/ez\n\nすると、メールアドレス宛にグラフの追加が通知され、画面から確認できるようになる。\n\n(メールアドレスに`+`みたいなURLエンコードが必要な文字を含んでる場合は、 --data-urlencode を使って一つずつパラメータを指定すればいい)\n\nAPIを利用するために必要となるキーは、初期状態だと登録時のメールアドレスになっている。これは[設定画面](https://www.stathat.com/settings)から変更可能。タイムゾーンも修正できるので住んでいる地域に変更しておいた方がいい。\n\n### Fluentd\n\nFluentd から StatHat を利用するために[プラギン](https://github.com/f440/fluent-plugin-stathat)作ったので、これを利用する。\n\n    fluent-gem install fluent-plugin-stathat\n\nたとえば、よくある「HTTP ステータスコードのカウント」の場合、以下のような設定をすればいい。\n\n    <source>\n      type tail\n      format apache\n      path /var/log/httpd/access_log\n      tag apache.access\n    </source>\n    <match apache.access>\n      type datacounter\n      unit minute\n      tag stathut.httpstatus\n      count_key code\n      pattern1 2xx ^2\\d\\d$\n      pattern2 3xx ^3\\d\\d$\n      pattern3 4xx ^4\\d\\d$\n      pattern4 5xx ^5\\d\\d$\n    </match>\n    <match stathut.httpstatus>\n      type copy\n      <store>\n        type  stathat\n        stat 2xx\n        ezkey your_email@example.com\n        count apache.access_200_count\n      </store>\n      <store>\n        type  stathat\n        stat 3xx\n        ezkey your_email@example.com\n        count apache.access_3xx_count\n      </store>\n      <store>\n        type  stathat\n        stat 4xx\n        ezkey your_email@example.com\n        count apache.access_4xx_count\n      </store>\n      <store>\n        type  stathat\n        stat 5xx\n        ezkey your_email@example.com\n        count apache.access_5xx_count\n      </store>\n    </match>\n\nこれで、こういったグラフが作れる。\n\n![httpstatus](/images/2013-03-17-fluentd-and-stathat/httpstatus.png)\n![4xx](/images/2013-03-17-fluentd-and-stathat/4xx.png)\n\n## まとめ\n\n[StatHat] 便利。\n\n[StatHat]: http://www.stathat.com/\n[Fluentd]: http://fluentd.org/\n[GrowthForecast]: http://kazeburo.github.com/GrowthForecast/\n[fluent-plugin-growthforecast]: https://github.com/tagomoris/fluent-plugin-growthforecast\n"}]},"__N_SSG":true}