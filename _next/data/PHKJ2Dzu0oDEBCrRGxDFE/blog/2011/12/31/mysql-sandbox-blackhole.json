{"pageProps":{"post":{"localPath":"/home/f440/go/src/github.com/f440/f440.github.com/content/2011-12-31-mysql-sandbox-blackhole.markdown","path":"2011/12/31/mysql-sandbox-blackhole","layout":"post","title":"MySQL::Sandboxで環境を作ってBLACKHOLEエンジンを試す","createdAt":"2011-12-30T15:00:00.000Z","kind":"article","comments":true,"tags":["mysql"],"content":"<p>ちょっとMySQLのBLACKHOLEエンジン使って調べたいことがあったんだけど、\n<a href=\"http://mysqlsandbox.net/\">MySQL::Sandbox</a> 使うとレプリケーション環境が簡単に構築できて便利。</p>\n<!-- more -->\n<p>以下は、MySQL::SandboxのセットアップからBLACKHOLEエンジン使うところまでの記録。</p>\n<h3>前提</h3>\n<ul>\n<li>確認した環境は Debian 6.0.3, perl v5.12.3</li>\n<li>cpanm &#x26; perlbrew インストール済み（<code>cpan</code>コマンドでも問題無いはず）</li>\n<li>MySQL 5.5 はサーバーを起動するためにlibaio1が必要なので、あらかじめパッケージをインストールしておく</li>\n</ul>\n<h3>手順</h3>\n<h4>インストール</h4>\n<p><code>cpanm</code> でMySQL::Sandbox をインストール。</p>\n<pre><code>$ cpanm MySQL::Sandbox\n</code></pre>\n<p>これで make_sandbox などのコマンド群がインストールされる。</p>\n<p>データファイルは以下のようなファイル構成を取る</p>\n<ul>\n<li>$HOME/opt/mysql 以下のサブディレクトリにサーバーを設置 (環境変数 SANDBOX_BINARY で変更可能)</li>\n<li>$HOME/sandboxes 以下のサブディレクトリにMySQLのデータや起動スクリプトを設置 (環境変数 SANDBOX_HOME で変更可能)</li>\n</ul>\n<h4>サーバーセットアップ</h4>\n<p>サーバーを起動してみる。</p>\n<pre><code># 使用するディレクトリ設定\n$ export SANDBOX_BINARY=$HOME/opt/mysql\n$ export SANDBOX_HOME=$HOME/opt/sandboxes\n# ソース取得\n$ cd SANDBOX_HOME\n$ curl -L -o mysql-5.5.19-linux2.6-x86_64.tar.gz http://www-jp.mysql.com/get/Downloads/MySQL-5.5/mysql-5.5.19-linux2.6-x86_64.tar.gz/from/http://ftp.jaist.ac.jp/pub/mysql/\n# Sandbox 作成\n$ make_sandbox $SANDBOX_BINARY/mysql-5.5.19-linux2.6-x86_64.tar.gz\n</code></pre>\n<p>これで$SANDBOX_BINARY/5.5.19 にサーバーが、また $SANDBOX_HOME/msb_5_5_19 以下にインスタンスが作成される。</p>\n<p>この時点で起動出来ているはずなので、接続してみる。以下で mysql クライアントが起動するはず。</p>\n<pre><code>$ $SANDBOX_HOME/msb_5_5_19/use\n</code></pre>\n<p><code>use</code>以外には、<code>start</code>, <code>stop</code>, <code>status</code> などの名前から動作が推測できそうなコマンド群がある。$SANDBOX_HOMEには複数のサンドボックスを操作するコマンド <code>use_all</code>, <code>start_all</code>, <code>stop_all</code> などがある。</p>\n<pre><code>$ make_replication_sandbox 5.5.19 \n# 第二引数はtar.gzまでのパスでもいいが、一度展開されたらバージョン番号指定でもいい。make_sandboxも同様\n</code></pre>\n<p>以上で、 master, node1, node2 というサーバーが起動する。node1, node2 は masterを参照したレプリケーション構成となる。デフォルトでノードは2台だが、<code>--how_many_nodes</code> オプションで台数は変更可能。</p>\n<p>同様に[Circular recplication](http://dev.mysql.com/doc/refman/5.1/ja/replication-\ntopology-circular.html)(日本語訳だとなんになるんだろう)も簡単に作れる。マスター/マスターレプリケーションはCircular replication が2台のみの構成だった場合に同じ。</p>\n<pre><code>$ make_replication_sandbox --circular=4 5.5.19\n</code></pre>\n<p>これで node1 -> node2, node2 -> nod3, node3 -> node4, node4 -> node1 という循環関係のレプリケーションが作れる。</p>\n<p>使い終わったら止めておこう。</p>\n<pre><code>$ $SANDBOX_HOME/stop_all\n</code></pre>\n<h3>BLACKHOLEエンジンを試す</h3>\n<p>準備ができたので、<a href=\"http://dev.mysql.com/doc/refman/5.1/ja/blackhole-storage-engine.html\">BLACKHOLEエンジン</a>を使ってみる。BLACKHOLEエンジンはバイナリログは記録するが、データは残さないストレージエンジンのこと。</p>\n<p>まずは、サンドボックス作成</p>\n<p>$ make_replication_sandbox --circular=3 5.5.19</p>\n<p>デフォルトストレージエンジンをnode1, node3はInnoDB、node2 はBLACKHOLEに変更</p>\n<pre><code>$ echo default_storage_engine=InnoDB >> $SANDBOX_HOME/rcsandbox_5_5_19/node1/my.sandbox.cnf\n$ echo default_storage_engine=BLACKHOLE >> $SANDBOX_HOME/rcsandbox_5_5_19/node2/my.sandbox.cnf\n$ echo default_storage_engine=InnoDB >> $SANDBOX_HOME/rcsandbox_5_5_19/node3/my.sandbox.cnf\n$ $SANDBOX_HOME/rcsandbox_5_5_19/restart_all\n</code></pre>\n<p>node2, node3 のレプリケーションだけ再開して、node1 -> node2 -> node3 の2階層スレーブにする。</p>\n<pre><code>$ $SANDBOX_HOME/rcsandbox_5_5_19/node2/use -e start slave\n$ $SANDBOX_HOME/rcsandbox_5_5_19/node3/use -e start slave\n</code></pre>\n<p>実験のための構成が完成した。ここで、node1 にデータを流し込んだとき、node2 にはデータが残らなくて、node3 にデータが出来たら成功。</p>\n<p>サンプルデータには、[Sample database with test suite](https://launchpad.net/test-\ndb/)を利用する。</p>\n<pre><code>$ curl -LO [http://launchpad.net/test-db/employees-db-1/1.0.6/+download/employees_db-full-1.0.6.tar.bz2](http://launchpad.net/test-db/employees-db-1/1.0.6/+download/employees_db-full-1.0.6.tar.bz2)\n$ tar xf employees_db-full-1.0.6.tar.bz2\n$ cd employees_db\n# InnoDB が決めうちで設定されているので、コメントアウト\n$ sed -i -re s/^\\s+(set storage_engine = InnoDB;)/-- \\1/ *.sql\n# 取り込み\n$ $SANDBOX_HOME/rcsandbox_5_5_19/node1/use  -t &#x3C; ./employees.sql\n</code></pre>\n<p>結果</p>\n<pre><code>$ cd $SANDBOX_HOME\n$ du -sh rcsandbox_5_5_19/node?/data/ibdata1\n219M    rcsandbox_5_5_19/node1/data/ibdata1\n18M     rcsandbox_5_5_19/node2/data/ibdata1\n219M    rcsandbox_5_5_19/node3/data/ibdata1\n</code></pre>\n<p>node2 だけデータファイルがふくらまない。</p>\n<pre><code>$ ls -l rcsandbox_5_5_19/node2/data/\n合計 357652\ndrwx------ 2 f440 f440      4096 2011-12-31 17:15 employees/\n-rw-rw---- 1 f440 f440   5242880 2011-12-31 17:14 ib_logfile0\n-rw-rw---- 1 f440 f440   5242880 2011-12-31 17:11 ib_logfile1\n-rw-rw---- 1 f440 f440  18874368 2011-12-31 17:14 ibdata1\n-rw-rw---- 1 f440 f440        88 2011-12-31 17:16 master.info\n-rw-rw---- 1 f440 f440      5925 2011-12-31 17:14 msandbox.err\ndrwx------ 2 f440 f440      4096 2011-12-31 17:11 mysql/\n-rw-rw---- 1 f440 f440      6273 2011-12-31 17:14 mysql-bin.000001\n-rw-rw---- 1 f440 f440 168403385 2011-12-31 17:16 mysql-bin.000002\n-rw-rw---- 1 f440 f440        38 2011-12-31 17:14 mysql-bin.index\n-rw-rw---- 1 f440 f440       315 2011-12-31 17:14 mysql_sandbox15902-relay-bin.000005\n-rw-rw---- 1 f440 f440 168399499 2011-12-31 17:16 mysql_sandbox15902-relay-bin.000006\n-rw-rw---- 1 f440 f440        76 2011-12-31 17:14 mysql_sandbox15902-relay-bin.index\n-rw-rw---- 1 f440 f440         5 2011-12-31 17:14 mysql_sandbox15902.pid\ndrwx------ 2 f440 f440      4096 2011-12-31 17:11 performance_schema/\n-rw-rw---- 1 f440 f440        75 2011-12-31 17:16 relay-log.info\ndrwx------ 2 f440 f440      4096 2011-12-31 17:11 test/\n</code></pre>\n<p>node2 のバイナリログ、リレーログはちゃんと出来ているので、BLACKHOLEエンジンの適用を確認できた。</p>\n<h3>メモ</h3>\n<ul>\n<li><code>$SANDBOX_HOME/clear_all</code> でデータ消せるの便利。</li>\n<li>MySQL::Sandbox 3.0.19 からは、<a href=\"http://mysqlsandbox.net/news.html\">Percona や Maria DB などの派生DBも扱える</a>みたい。いろいろなバージョンで試すことが多いのでうれしい。</li>\n</ul>\n"}},"__N_SSG":true}