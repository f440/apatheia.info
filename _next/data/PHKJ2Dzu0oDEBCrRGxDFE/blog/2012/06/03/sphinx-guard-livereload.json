{"pageProps":{"post":{"localPath":"/home/f440/go/src/github.com/f440/f440.github.com/content/2012-06-03-sphinx-guard-livereload.markdown","path":"2012/06/03/sphinx-guard-livereload","layout":"post","title":"sphinxの更新をguard-livereloadで検知してブラウザを自動リロードする","createdAt":"2012-06-02T15:00:00.000Z","kind":"article","comments":true,"tags":null,"content":"<p>sphinxでドキュメントを書く際に生じる「文章の記述 => ビルド =>\nブラウザでの確認」という一連のサイクルを人力でやるのは効率が悪い。いろいろな省力化対策が考えられるが、ここでは guard-livereloadを使って、文章のビルドとブラウザのリロードを自動化する方法を説明する。</p>\n<!-- more -->\n<h2>作業環境</h2>\n<p>検証に使った環境は以下の通り。環境に依存する部分は少ないので、他のOSでも動くと思う。</p>\n<ul>\n<li>Mac OS X Lion</li>\n<li>ruby 1.9.3-p194</li>\n<li>sphinx 1.1.3</li>\n</ul>\n<h2>事前準備</h2>\n<h3>サーバー側準備</h3>\n<p>用意するのは3ファイル</p>\n<ul>\n<li>Gemfile … 必要なライブラリをまとめてインストールするための設定ファイル</li>\n<li>Gaurdfile … ファイルシステム監視の設定ファイル</li>\n<li>Procfile … Webサーバーとファイル監視を起動するための設定ファイル</li>\n</ul>\n<p><a href=\"https://gist.github.com/2862843\">https://gist.github.com/2862843</a></p>\n<p>これら3ファイルをsphinxの作業ディレクトリ内に配置する。製生後のhtmlファイルは<code>buld/html</code>ディレクトリに格納されていることを期待した設定になっているので、必要であれば適宜修正する。</p>\n<p>ファイルの設置が終わったら、ライブラリをインストールする。</p>\n<pre><code>bundle install\n</code></pre>\n<h3>ブラウザ側準備</h3>\n<p>好きなブラウザにlivereloadのブラウザ拡張をインストールする。</p>\n<p><a href=\"http://help.livereload.com/kb/general-use/browser-extensions\">http://help.livereload.com/kb/general-use/browser-\nextensions</a></p>\n<h2>利用方法</h2>\n<p>サーバー側でファイルの監視とlivereloadを開始する。</p>\n<pre><code>foreman start\n</code></pre>\n<p>ブラウザで http://localhost:3000/ (3000以外にしたい場合は Procfile 内で変更)にアクセスしてlivereloadのブラウザ拡張を有効化すれば、あとはファイルの更新に合わせて自動的にビルドとブラウザのリロードが行われる。</p>\n<h2>参考</h2>\n<ul>\n<li><a href=\"http://aligach.net/diary/20110925.html\">LiveReloadが超気持ちいい2011</a> Livereloadの詳しい説明</li>\n<li><a href=\"https://addons.mozilla.org/en-US/firefox/addon/auto-reload/\">Auto Reload</a> ローカルファイルの更新を検知してFirefoxをリロードしてくれるアドオン。試してみたけど、自分の環境ではリロードがうまく動かなかった。</li>\n</ul>\n"}},"__N_SSG":true}