{"pageProps":{"post":{"localPath":"/home/f440/go/src/github.com/f440/f440.github.com/content/2012-05-13-vps-lxc-xtradb-cluster.markdown","path":"2012/05/13/vps-lxc-xtradb-cluster","layout":"post","title":"さくらのVPSにLXCで仮想環境構築してXtraDB Cluster動かす","createdAt":"2012-05-12T15:00:00.000Z","kind":"article","comments":true,"tags":["mysql","lxc","linux"],"content":"<p>ほんの数年前までVPSといえばLinode、Slicehostなどの海外のサーバーしか選択肢がなかった。ls を実行しても一呼吸おくほどのレイテンシーがあるような環境で、128MBくらいのメモリを何とかやりくりしてRailsを動かしていたが、現在では月1000円程度で用途によっては手に余るようなスペックが手に入るようになっている。そんなVPSの余ったリソースを使って、仮想環境をたてようというのが今回の目的だ。</p>\n<!-- more -->\n<p><a href=\"http://lxc.sourceforge.net/\">LXC</a>は、他の仮想化方式と比べてオーバーヘッドが少なくきびきび動くし、必要であればCPUやメモリの制限をつけることもできる。RPMやDebのパッケージ作成をしたり、Chefのcookbook作成などで独立した環境を手軽に構築したい人には特に有用に思う。また、簡単にネットワークが作れるので、複数台構成のソフトウェアを1台のマシンのなかで動かすことが出来る。今回は動作確認として <a href=\"http://www.percona.com/software/percona-xtradb-cluster/\">PerconaXtraDB Cluster</a>を動かしてみることにする。</p>\n<h2>前提について</h2>\n<p>作業環境は以下を想定している。</p>\n<ul>\n<li>さくらのVPS(v3) 1G\n<ul>\n<li>CentOS 6.2 x86_64</li>\n</ul>\n</li>\n<li>LXC 0.7.5</li>\n</ul>\n<p>CentOSを使っているのはデフォルトのOSイメージだからというのが理由。</p>\n<p>今回の内容をEC2上で実行する場合、Amazon Linux でもほとんど同様の設定で作業を行えることを確認しているけど、もっ と新しいOS、たとえば Ubuntu 12.04 LTS を使えば後述する cgroupの設定、bridgeの設定が不要となるためより簡単に行える。CentOS 6で実施したときだけ遭遇するような問題に何度もぶつかったので、出来るだけ新しいOSを使った方がいい。</p>\n<p>仮想環境としては、lxcに同梱されているテンプレートを利用してUbuntuを、またOSイメージの作成からCentOSを構築する。</p>\n<h2>構築方法</h2>\n<p>以降の作業はすべて root で行うものとする。</p>\n<h3>ネットワークの設定</h3>\n<p>仮想環境とのやりとりで使うブリッジを作る。</p>\n<pre><code># yum install bridge-utils\n# vim /etc/sysconfig/network-scripts/ifcfg-lxcbr0\n\n    DEVICE=lxcbr0\n    TYPE=Bridge\n    BOOTPROTO=none\n    IPADDR=10.0.3.1\n    NETMASK=255.255.255.0\n    ONBOOT=yes\n\n# ifup lxcbr0 # 起動\n</code></pre>\n<h3>cgroup</h3>\n<pre><code># mount | grep cgroup # cgroup がないこと確認\n# mkdir -p /cgroup\n# printf \"none\t\t\t/cgroup\t\tcgroup\tdefaults\t\t0 0\n\" >> /etc/fstab\n# mount -a\n# mount | grep cgroup # cgroup があること確認\n</code></pre>\n<h3>lxc セットアップ</h3>\n<pre><code># yum install libcap-devel docbook-utils\n# yum groupinstall \"Development Tools\"\n\n# wget [http://lxc.sourceforge.net/download/lxc/lxc-0.7.5.tar.gz](http://lxc.sourceforge.net/download/lxc/lxc-0.7.5.tar.gz)\n# tar xf lxc-0.7.5.tar.gz\n# cd lxc-0.7.5\n# ./configure\n# make rpm # この途中で /usr/lib64/lxc/{template,rootfs} がインストールされるのかなり狂ってる\n# rpm -ivh ~/rpmbuild/RPMS/x86_64/lxc-0.7.5-1.x86_64.rpm\n   (~/rpmbuild になければ、/usr/src/rpm から探す)\n# mkdir -p /var/lib/lxc\n</code></pre>\n<h3>dnsmasq (DHCP, DNS サーバー) セットアップ</h3>\n<p>環境を増やすごとに毎回NICの設定を編集するのは手間なので、ホスト側で dncp, dns の設定をする。</p>\n<pre><code># yum install dnsmasq\n# vim /etc/dnsmasq.conf\n\n    コメントを外して有効化する、編集するなどで以下の設定を行う\n    domain は自分の使いたい名前にすればいい\n\n    domain-needed\n    bogus-priv\n    interface = lxcbr0\n    listen-address = 127.0.0.1\n    listen-address = 10.0.3.1\n    expand-hosts\n    domain = lxc\n    dhcp-range = 10.0.3.50,10.0.3.200,1h\n\n# service dnsmasq reload\n</code></pre>\n<h3>ネットワークセットアップ</h3>\n<p>仮想環境から外部へのやりとりが出来るようにネットワークの設定を変更する。</p>\n<pre><code># sysctl -w net.ipv4.ip_forward=1\n# sed -i -re s/net.ipv4.ip_forward = 0/net.ipv4.ip_forward = 1/ /etc/sysctl.conf\n# iptables -A POSTROUTING -s 10.0.3.0/24 -t nat -j MASQUERADE\n# service iptables save # 設定を /etc/sysconfig/iptables に保存\n</code></pre>\n<h3>仮想環境構築 (1) 同梱のスクリプトを使った Ubuntu のインストール</h3>\n<p>lxcに同梱のスクリプト /usr/lib64/lxc/templates/lxc-ubuntu を使ってUbuntuをインストールする。</p>\n<p>基本的な設定ファイルを作る。</p>\n<pre><code># cd\n# vim lxc.conf\n\n    lxc.network.type=veth\n    lxc.network.link=lxcbr0\n    lxc.network.flags=up\n</code></pre>\n<p>今回は Ubuntu を導入するので、そのために必要なプログラムをインストールする。</p>\n<pre><code># yum install --enablerepo=epel debootstrap dpkg\n</code></pre>\n<p>これで準備が出来たので、実際に仮想環境を動かしてみる。</p>\n<pre><code># lxc-create -t ubuntu -f lxc.conf -n vm0\n   -t がテンプレートの名前。 -t ubuntu なら /usr/lib64/lxc/templates/lxc-ubuntu が読み込まれる\n      オプションでバージョンが指定可能だが、lxc 0.7.5 に同梱されているテンプレートのデフォルトだと Ubuntu 10.04 が選ばれる。\n   -f がさっき作った設定ファイルの場所\n   -n が環境の名前。今回は vm0 とした。 /var/lib/lxc/vm0 にファイルがおかれる\n# lxc-start -n vm0 -l debug -o debug.out -d\n   -l はデバッグレベル、-o はデバッグの場所を指定。安定して起動するようになったらつけなくていい\n# lxc-console -n vm0\n  一回エンター押した後、ユーザー root パスワード root でログイン\n  抜けるときは Ctrl-a q\n\n  lxc-console をしても何も表示されない状態になったら、以下を施して再起動\n\n# vim /var/lib/lxc/vm0/rootfs/etc/init/lxc.conf\n\n  telinit を差し込む\n\n    --- /var/lib/lxc/vm0/rootfs/etc/init/lxcguest.conf.orig 2012-02-07 10:28:25.000000000 +0900\n    +++ /var/lib/lxc/vm0/rootfs/etc/init/lxcguest.conf      2012-05-06 22:43:21.606098530 +0900\n    @@ -12,5 +12,6 @@\n        touch /var/run/utmp\n        chown root:utmp /var/run/utmp\n        initctl emit --no-wait net-device-added INTERFACE=lo || true\n    +   telinit 3\n        exit 0\n     end script\n</code></pre>\n<p>lxc-console だとCtrl-aが使えなくて不便なので、今後はsshでログインしたい。テンプレートが自動的にOpenSSHをインストールしてくれるが、ちゃんと起動しない。仕方が無いので、update-rc.d で起動するように設定</p>\n<pre><code>  仮想環境内で実行\n# update-rc.d ssh enable\n</code></pre>\n<p>固定IPアドレスを振りたい場合は、設定を変更する。</p>\n<pre><code>  ホスト側からの変更\n# vim /var/lib/lxc/vm0/config\n\n  lxc.network.ipv4 = 10.0.3.2/24\n\n  仮想環境の中で変更\n# vim /etc/network/interfaces\n\n    変更前\n    auto lo\n    iface lo inet loopback\n\n    auto eth0\n    iface eth0 inet dhcp\n\n    変更後\n    auto lo\n    iface lo inet loopback\n\n    iface eth0 inet static\n        address 10.0.3.2\n        netmask 255.255.255.0\n        gateway 10.0.3.1\n</code></pre>\n<p>仮想環境の破棄は lxc-destroy で行う</p>\n<pre><code># lxc-destroy -n vm0\n</code></pre>\n<h3>仮想環境構築 (2) 独自に構築した CentOS 6 のインストール</h3>\n<p>lxc-console の標準テンプレートでは CentOS が用意されていないので、自力でセットアップする。</p>\n<h4>イメージ作成</h4>\n<p>基本的に <a href=\"http://wiki.1tux.org/wiki/Centos6/Installation/Minimal_installation_using_yum\">Centos6/Installation/Minimal installation using yum</a> の通り。ただし 64 bit 版をインストールする</p>\n<pre><code># mkdir /t\n# cd /t\n# wget [http://mirrors.kernel.org/centos/6/os/x86_64/Packages/centos-release-6-2.el6.centos.7.x86_64.rpm](http://mirrors.kernel.org/centos/6/os/x86_64/Packages/centos-release-6-2.el6.centos.7.x86_64.rpm)\n# rpm2cpio centos-release-6-2.el6.centos.7.x86_64.rpm  | cpio -idm\n# sed -i s/$releasever/6/g ./etc/yum.repos.d/*\n# yum --installroot=/t groupinstall base\n# yum --installroot=/t install dhclient\n# rm centos-release*.rpm\n# chroot /t\n\n  // ここから後はchroot内\n\n# passwd # パスワード変更\n\n# rm -f /dev/null\n# mknod -m 666 /dev/null c 1 3\n# mknod -m 666 /dev/zero c 1 5\n# mknod -m 666 /dev/urandom c 1 9\n# ln -s /dev/urandom /dev/random\n# mknod -m 600 /dev/console c 5 1\n# mknod -m 660 /dev/tty1 c 4 1\n# chown root:tty /dev/tty1\n\n# mkdir -p /dev/shm\n# chmod 1777 /dev/shm\n# mkdir -p /dev/pts\n# chmod 755 /dev/pts\n\n# cp -a /etc/skel/. /root/.\n\n# cat > /etc/resolv.conf &#x3C;&#x3C; END\n# Google public DNS\nnameserver 8.8.8.8\nnameserver 8.8.4.4\nEND\n\n# cat > /etc/hosts &#x3C;&#x3C; END\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\nEND\n\n# cat > /etc/sysconfig/network &#x3C;&#x3C; END\nNETWORKING=yes\nHOSTNAME=localhost\nEND\n\n# cat > /etc/sysconfig/network-scripts/ifcfg-eth0  &#x3C;&#x3C; END\nDEVICE=eth0\nONBOOT=yes\nBOOTPROTO=dhcp\nEND\n\n# cat > /etc/fstab &#x3C;&#x3C; END\n/dev/root               /                       rootfs   defaults        0 0\nnone                    /dev/shm                tmpfs    nosuid,nodev    0 0\nEND\n\n# cat > /etc/init/lxc-sysinit.conf &#x3C;&#x3C; END\nstart on startup\nenv container\n\npre-start script\n        if [ \"x$container\" != \"xlxc\" -a \"x$container\" != \"xlibvirt\" ]; then\n                stop;\n        fi\n        telinit 3\n        initctl start tty TTY=console\n        exit 0;\nend script\nEND\n\n# exit\n\n// ここから後はchroot外\n\n# cd /t\n# tar cvfz /centos6-lxc-root.tgz .\n</code></pre>\n<h4>設定</h4>\n<pre><code># mkdir /var/lib/lxc/vm0\n# cd /var/lib/lxc/vm0\n# mkdir rootfs\n# cd rootfs\n# tar xfz /centos6-lxc-root.tgz --numeric-owner\n# cd /var/lib/lxc/vm0\n\n# cat >/var/lib/lxc/vm0/config &#x3C;&#x3C; END\nlxc.network.type=veth\nlxc.network.link=lxcbr0\nlxc.network.flags=up\nlxc.network.veth.pair=veth-vm0\nlxc.utsname = vm0\n\nlxc.tty = 1\nlxc.pts = 1024\nlxc.rootfs = /var/lib/lxc/vm0/rootfs\nlxc.mount  = /var/lib/lxc/vm0/fstab\nlxc.arch = x86_64\nlxc.cap.drop = sys_module mac_admin\n\nlxc.cgroup.devices.deny = a\n# Allow any mknod (but not using the node)\nlxc.cgroup.devices.allow = c *:* m\nlxc.cgroup.devices.allow = b *:* m\n# /dev/null and zero\nlxc.cgroup.devices.allow = c 1:3 rwm\nlxc.cgroup.devices.allow = c 1:5 rwm\n# consoles\nlxc.cgroup.devices.allow = c 5:1 rwm\nlxc.cgroup.devices.allow = c 5:0 rwm\n# /dev/{,u}random\nlxc.cgroup.devices.allow = c 1:9 rwm\nlxc.cgroup.devices.allow = c 1:8 rwm\nlxc.cgroup.devices.allow = c 136:* rwm\nlxc.cgroup.devices.allow = c 5:2 rwm\n# rtc\nlxc.cgroup.devices.allow = c 254:0 rwm\n#fuse\nlxc.cgroup.devices.allow = c 10:229 rwm\n#tun\nlxc.cgroup.devices.allow = c 10:200 rwm\n#full\nlxc.cgroup.devices.allow = c 1:7 rwm\n#hpet\nlxc.cgroup.devices.allow = c 10:228 rwm\n#kvm\nlxc.cgroup.devices.allow = c 10:232 rwm\nEND\n\n# cat > fstab  &#x3C;&#x3C; END\nproc            /var/lib/lxc/vm0/rootfs/proc         proc    nodev,noexec,nosuid 0 0\nsysfs           /var/lib/lxc/vm0/rootfs/sys          sysfs defaults  0 0\nEND\n</code></pre>\n<h4>起動</h4>\n<pre><code># lxc-start -n vm0 -l debug -o debug.out -d\n# lxc-console -n vm0\n\nOpenSSH がなければ入れておく\n# yum install openssh-server\n# service sshd start\n</code></pre>\n<h2>動作確認 (Percona XtraDB Cluster の稼働確認)</h2>\n<p>動作確認として Percona XtraDB Cluster を動かしてみる。</p>\n<p>すでにこれまでの作業を通して vm0 としてCentOS 6がインストール済みとする。</p>\n<h3>ホスト側設定</h3>\n<ul>\n<li>構成\n<ul>\n<li>ホスト, IPアドレス 10.0.3.1</li>\n<li>仮想0 vm0, IPアドレス 10.0.3.2</li>\n<li>仮想1 vm1, IPアドレス 10.0.3.3</li>\n<li>仮想2 vm2, IPアドレス 10.0.3.4</li>\n</ul>\n</li>\n</ul>\n<p>各仮想環境に簡単にアクセスできるように hosts を設定しておく。ホスト側に設定しておけば、dnsmasq のおかげで仮想側でも名前が引けるようになる。</p>\n<pre><code># vim /etc/hosts\n    以下を追記\n    10.0.3.2 vm0\n    10.0.3.3 vm1\n    10.0.3.4 vm2\n</code></pre>\n<h3>コピー元(vm0) 設定</h3>\n<pre><code># ssh vm0\n  ここからはvm0の中\n\n  固定IPアドレスを設定\n# vim /var/lib/lxc/vm1/rootfs/etc/sysconfig/network-scripts/ifcfg-eth0\n    DEVICE=eth0\n    ONBOOT=yes\n    BOOTPROTO=static\n    IPADDR=10.0.3.3\n    NETMASK=255.255.255.0\n    GATEWAY=10.0.3.1\n\n  XtraDB Cluster インストール\n# rpm -Uhv [http://repo.percona.com/testing/centos/6/os/noarch/percona-testing-0.0-1.noarch.rpm](http://repo.percona.com/testing/centos/6/os/noarch/percona-testing-0.0-1.noarch.rpm)\n# rpm -Uhv [http://www.percona.com/downloads/percona-release/percona-release-0.0-1.x86_64.rpm](http://www.percona.com/downloads/percona-release/percona-release-0.0-1.x86_64.rpm)\n# yum install Percona-XtraDB-Cluster-server Percona-XtraDB-Cluster-client\n# cat > /etc/my.cnf &#x3C;&#x3C;END\n[mysqld]\nbinlog_format=ROW\nwsrep_provider=/usr/lib64/libgalera_smm.so\nwsrep_cluster_address=gcomm://\nwsrep_slave_threads=2\nwsrep_cluster_name=lxccluster\nwsrep_sst_method=rsync\nwsrep_node_name=node0\ninnodb_locks_unsafe_for_binlog=1\ninnodb_autoinc_lock_mode=2\nEND\n\n# poweroff\n</code></pre>\n<h3>コピー、起動</h3>\n<pre><code># lxc-clone -n vm1 -o vm0\n  -n はこれから作る仮想環境の名前\n  -o はコピー元の仮想環境の名前\n# lxc-clone -n vm1 -o vm0\n# vim /var/lib/lxc/vm1/config\n  vm0をvm1に置換 (vm2ではvm2に置換)\n  IPアドレスを10.0.3.2 -> 10.0.3.3 に変更 (vm2では 10.0.3.4に変更)\n# vim /var/lib/lxc/vm1/rootfs/etc/my.cnf\n    wsrep_cluster_address=gcomm:// をwsrep_cluster_address=gcomm://10.0.3.2 に変更\n    wsrep_node_name=node0 を wsrep_node_name=node1 に変更 (vm2ではnode2に変更)\n\n  同様にvm0からvm2のコピーを実施\n</code></pre>\n<p>3つの環境が完成したら起動</p>\n<pre><code># lxc-start -n vm0 -l debug -o debug.0.out -d\n# lxc-start -n vm1 -l debug -o debug.1.out -d\n# lxc-start -n vm2 -l debug -o debug.2.out -d\n</code></pre>\n<h3>動作確認</h3>\n<p>vm0 にログインして実行</p>\n<pre><code># mysql -u root\n  データベース、テーブル作成\nmysql> create database t;\nmysql> use t;\nmysql> create table sample (\nid int not null primary key auto_increment,\nvalue int\n);\n\nデータ投入\nmysql> insert into sample set value = 1;\nmysql> insert into sample set value = 1;\nmysql> insert into sample set value = 1;\nmysql> select * from sample;\n+----+-------+\n| id | value |\n+----+-------+\n|  2 |     1 |\n|  5 |     1 |\n|  8 |     1 |\n+----+-------+\n</code></pre>\n<p>IDがスキップしながらインサートされることがわかる。引き続き、他の環境でもデータを入れてみる。</p>\n<p>vm1 にログインして実行</p>\n<pre><code>mysql> use t;\nmysql> select * from sample;\n+----+-------+\n| id | value |\n+----+-------+\n|  2 |     1 |\n|  5 |     1 |\n|  8 |     1 |\n+----+-------+\nmysql> insert into sample set value =  1;\nmysql> insert into sample set value =  1;\nmysql> insert into sample set value =  1;\nmysql> select * from sample;\n+----+-------+\n| id | value |\n+----+-------+\n|  2 |     1 |\n|  5 |     1 |\n|  8 |     1 |\n|  9 |     1 |\n| 12 |     1 |\n| 15 |     1 |\n+----+-------+\n</code></pre>\n<p>同様のことがvm2でも起きる。</p>\n<p>これにより、XtraDB Cluster の以下の動作が確認出来た。</p>\n<ul>\n<li>すべてのサーバーで書き込みと参照がおこなえること</li>\n<li>オートインクリメントがバッティングしないように、値が自動的にオフセットをつけて挿入されること</li>\n</ul>\n<h2>メモ</h2>\n<h3>外部から仮想環境へ直接アクセスしたい場合</h3>\n<p>たとえば、外部からポート10080でアクセスされたとき、仮想環境の 10.0.3.51 のポート 80 へ転送させたい場合は iptables\nで以下のような設定をする。</p>\n<pre><code># vim /etc/syscofig/iptables\n    -A POSTROUTING -s 10.0.3.0/24 -j MASQUERADE の下に以下を追加\n    -A PREROUTING -i eth0 -p tcp --dport 10080 -j DNAT --to-destination 10.0.3.51:80\n# service iptables condrestart\n# iptables -L -t nat # NATテーブルから設定追加を確認\n</code></pre>\n<h3>新しい Ubuntu を入れたい場合</h3>\n<p>元の手順だとlucid (10.04) がインストールされるが、たとえば oneiric (11.10) であれば以下でインストール可能。</p>\n<pre><code># cp -a /usr/share/debootstrap/scripts/lucid  /usr/share/debootstrap/scripts/oneiric\n    lucid は /usr/share/debootstrap/scripts/gutsy のシンボリックリンクで、他のリリースも同様。とにかくファ イル名が参照できるようにシンボリックリンクをコピーしておけばいい。\n# lxc-create -t ubuntu -f lxc.conf -n vm0 -- --trim -r oneiric\n    lxc-create ではなく -r はテンプレートへの引数\n</code></pre>\n<h3>他の OS もインストールしてみたい場合</h3>\n<p>/usr/lib64/lxc/templates/ には lxc-busybox,lxc-debian,lxc-fedora,lxc-lenny,lxc-\nopensuse,lxc-sshd,lxc-ubuntu の テンプレートがある。これ以外の環境が必要であれば、「lxc guset\nOS名」とかで検索してみる。</p>\n<h2>参考</h2>\n<ul>\n<li><a href=\"http://www.activestate.com/blog/2011/10/virtualization-ec2-cloud-using-lxc\">http://www.activestate.com/blog/2011/10/virtualization-ec2-cloud-using-lxc</a></li>\n<li><a href=\"http://wiki.debian.org/LXC\">http://wiki.debian.org/LXC</a></li>\n<li><a href=\"https://help.ubuntu.com/12.04/serverguide/lxc.html\">https://help.ubuntu.com/12.04/serverguide/lxc.html</a></li>\n<li><a href=\"http://www.lacerta.be/d7/content/lxc-installation-ubuntu-server-1104\">http://www.lacerta.be/d7/content/lxc-installation-ubuntu-server-1104</a></li>\n<li><a href=\"http://wiki.1tux.org/wiki/Lxc/Installation/Guest/Centos/6\">http://wiki.1tux.org/wiki/Lxc/Installation/Guest/Centos/6</a></li>\n<li><a href=\"http://www.percona.com/doc/percona-xtradb-cluster/index.html\">http://www.percona.com/doc/percona-xtradb-cluster/index.html</a></li>\n</ul>\n"}},"__N_SSG":true}