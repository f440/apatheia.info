{"pageProps":{"tag":"chef","posts":[{"localPath":"/home/f440/go/src/github.com/f440/f440.github.com/content/2013-02-08-create-chocolatey-package.markdown","path":"blog/2013/02/08/create-chocolatey-package","layout":"post","title":"chocolatey で Haskell Platform 用のパッケージを作る","createdAt":"2013-02-08T13:49:00.000Z","kind":"article","comments":true,"tags":["windows","chocolatey","haskell","chef"],"content":"\n[chocolatey] の仕組みに興味を持ったので、パッケージを作ってみる。\n\n<!-- more -->\n\n目標は「[Haskell Platform for Windows] からインストーラをダウンロードしてきてサイレントインストール」ができるパッケージを作って、[chocolatey] のリポジトリにパッケージを登録してみる。\n\n## 作業\n\n### パッケージ作成\n\n[ドキュメント](https://github.com/chocolatey/chocolatey/wiki/CreatePackages)では [warmup] (プロジェクトのひな形を作ったり、そこで生成されたファイル内の文字列を置換したりするプログラム) を使ったやり方が説明されているけど、うまく動かなかったのでガリガリ手作業でやっていく。\n\n前提として、chocolatey のインストール方法は済んでいるものとする。\n\nまずはテンプレートを手に入れる。github から直接ファイルをダウンロードでもいいけど、今回の手順では clone してみよう。\n\n    # git 入れてなければ インストール\n    cinst git\n    # パスを通すため、コマンドプロンプトから抜けて新しく立ち上げ直す\n\n    cd %ChocolateyInstall%\n    git clone https://github.com/chocolatey/chocolateytemplates.git\n    cd chocolateytemplates\\_templates\n\nどこでもいいので、作業用にフォルダを作ってそこにテンプレートをコピーする。\n\n    cd %USERPROFILE%\n    mkdir my_templates\n    cd my_templates\n    xcopy %ChocolateyInstall%\\chocolateytemplates\\_templates\\chocolatey HaskellPlatform /s /e /i\n\nいよいよテンプレートの中身を作っていく。\n\n    cd HaskellPlatform\n    ren __NAME__.nuspec HaskellPlatform.nuspec \n    # HaskellPlatform.nuspec と tools/chocolateyInstall.ps1 を開いてプレースホルダを変更\n    notepad HaskellPlatform.nuspec\n    notepad tools/chocolateyInstall.ps1\n    # HaskellPlatform は NSIS 製なので、\n    # http://nsis.sourceforge.net/Docs/Chapter3.html#3.2 より、\n    # サイレントインストールのためのコマンドラインオプションが /S をつければいい\n\n編集後のファイルは以下の通り\n\n- [HaskellPlatform.nuspec](https://github.com/f440/chocolatey-HaskellPlatform/blob/master/HaskellPlatform.nuspec)\n- [tools/chocolatey-HaskellPlatform.ps1](https://github.com/f440/chocolatey-HaskellPlatform/blob/master/tools/chocolateyInstall.ps1)\n\nパッケージングする。\n\n    cpack\n\nHaskellPlatform.{バージョン番号}.nupkg ができるはず。インストールしてみよう。\n\n    cinst HaskellPlatform -source %cd%\n\nうまくいけば、Haskell のサイレントインストールが始まる。\n\n### パッケージ登録\n\n[chocolatey] にパッケージを登録してみよう。パッケージの登録にはアカウントが必要。\n\n登録方法は 2 種類。\n\n1. アップロードフォームから \\*.nupkg をアップロード\n2. API キーを取得して、コマンドラインから push\n\n1 は簡単すぎるので、2 を試す。事前に [chocolatey] のアカウント画面から API キーを取得しておこう。\n\n    cinst nuget.commandline\n    NuGet SetApiKey <your key here> -source http://chocolatey.org/\n    cpush HaskellPlatform.{バージョン番号}.nupkg\n\n登録が終われば、他のマシンから `cinst HaskellPlatform` でインストールできるようになる。\n\n## まとめ\n\nアンインストールの設定が用意されていない、といっただいぶ手抜きなものだけど簡単にできた。\n\n[chocolatey] 公式の github アカウントでは [Chef 用の cookbook](https://github.com/chocolatey/chocolatey-cookbook) を配布している。chef を使って Windows マシンをセットアップするとなると、パッケージマネージャがなければ [chef-cookbooks/windows] (Windows向けのResource/Provider) を使ってインストール方法をちまちま指定していくことになるわけだけど、[chocolatey] 使えば処理が抽象化できてよさげ。\n\n## 参考\n\n- [chocolatey]\n- [Haskell Platform for Windows]\n- [chocolateyのgithubアカウント](https://github.com/chocolatey/)\n\n[chocolatey]: http://chocolatey.org/\n[Haskell Platform for Windows]: http://www.haskell.org/platform/windows.html\n[warmup]: https://github.com/chucknorris/Warmup\n[chef-cookbooks/windows]: https://github.com/opscode-cookbooks/windows\n"}]},"__N_SSG":true}