{"pageProps":{"tag":"cli","posts":[{"localPath":"/home/f440/go/src/github.com/f440/f440.github.com/content/2012-10-07-sub-for-subcommands.markdown","path":"blog/2012/10/07/sub-for-subcommands","layout":"post","title":"サブコマンドを sub で処理する","createdAt":"2012-10-07T13:13:00.000Z","kind":"article","comments":true,"tags":["cli","shell","unix"],"content":"\n[sub][] は [37signals][] が公開しているスクリプト群。サブコマンド付きのコマンドを作りたいとき、補完やヘルプメッセージなどの便利な機能を提供してくれる。\n\n<!-- more -->\n\n## 使い方\n\n以下の簡単なコマンドを作って、動作を確認してみることにする。\n\n    ex. browse safari http://google.com/\n    \n    コマンド browse にサブコマンドでブラウザ(safari, chrome, opera, ...)を与え、\n    最後の引数で渡された URL が開く。URL が渡されなければ、ブラウザの起動のみ行う。\n\nなお、確認はすべて Mac OS X 10.8 上 の zsh で行っている。\n\n### 初期化\n\n    $ git clone git://github.com/37signals/sub.git browse\n    $ cd browse\n    $ ./prepare.sh browse\n    # 以下のメッセージが表示される\n\n    Preparing your 'browse' sub!\n    Done! Enjoy your new sub! If you're happy with your sub, run:\n    \n        rm -rf .git\n        git init\n        git add .\n        git commit -m 'Starting off browse'\n        ./bin/browse init\n    \n    Made a mistake? Want to make a different sub? Run:\n        git add .\n        git checkout -f\n    Thanks for making a sub!\n\n言われたとおり、コマンドを実行\n\n    $ rm -rf .git\n    $ git init\n    $ git add .\n    $ git commit -m 'Starting off foo'\n    $ ./bin/foo init\n    # 以下のメッセージが表示される。パスは作業ディレクトリに応じて変わる。\n\n    # Load browse automatically by adding\n    # the following to ~/.zshenv:\n    \n    eval \"$(/XXXXXXXX/browse/bin/browse init -)\"\n\n最後に表示されるコマンドを実行することにより、補完が有効になる(XXXXXXXX は作業ディレクトリに応じて変わる)。`browse he[tab]` を実行してみよう。\n\n    $ browse help\n    Usage: browse <command> [<args>]\n    Some useful browse commands are:\n       commands               List all browse commands\n    \n    See 'browse help <command>' for information on a specific command.\n\n無事ヘルプが表示されたら、セットアップはうまくいっている。\n\n### サブコマンド作成\n\nまずはディレクトリ構造を見てみよう。\n\n    $ gfind ! -path './.git/*'\n    .\n    ./.git\n    ./bin\n    ./bin/browse\n    ./completions\n    ./completions/browse.bash\n    ./completions/browse.zsh\n    ./libexec\n    ./libexec/browse\n    ./libexec/browse-commands\n    ./libexec/browse-completions\n    ./libexec/browse-help\n    ./libexec/browse-init\n    ./libexec/browse-sh-shell\n    ./LICENSE\n    ./share\n    ./share/browse\n    ./share/browse/example\n\nlibexec/browse-SUBCOMMAND  形式でファイルを作れば、サブコマンドを追加できる。早速追加してみよう。\n\n    $ vim libexec/browse-safari\n    \n        #!/usr/bin/env bash\n        set -e\n        open -a safari $1\n        \n    $ chomod a+x libexec/browse-safari\n\nサブコマンドはシェル補完できるので、`browse saf[tab] http://google.com` といった入力が可能。問題が無ければブラウザが起動する。 ただ、これだけだと使い方がわかりづらいので、ヘルプを追加してみる。\n\n    $ vim libexec/browse-safari\n    \n        #!/usr/bin/env bash\n        #\n        # Usage: browse safari [URL]\n        # Summary: safari で指定の URL を開く\n        # Help: safari を利用して、引数で渡された URL を開く\n        # 何も URL を指定しなければ、ブラウザの起動のみ\n        \n        set -e\n        \n        open -a safari $1\n\n\nヘルプに反映されていることを確認。\n\n    $ browse help safari\n    Usage: browse safari [URL]\n\n    safari を利用して、引数で渡された URL を開く\n    何も URL を指定しなければ、ブラウザの起動のみ\n\n引数なしの `help` もメッセージが変わっている。\n\n    $ browse help\n    Usage: browse <command> [<args>]\n    \n    Some useful browse commands are:\n       commands               List all browse commands\n       safari                 safari で指定の URL を開く\n    \n    See 'browse help <command>' for information on a specific command.\n\nあとは、libexec-chrome, libexec-opera, ... とサブコマンドを追加していくことができる。\n\n## 雑感\n\nプログラムを書いてもシェルの補完設定までは手が回らないことが多いので、簡単にサポートしてくれる仕組みが提供されているのはかなりよかった。\n\nシェルスクリプトの書き方はかなりばらつきがあり、自分の周りでも割とフリーダムな状況になっていたので、邪魔にならない程度のフレームワークがあればいいな、と思っていた。そういう用途にも合っていると思う。\n\n## 参考\n\n- [37signalsのブログでの紹介][blog]\n- [GitHubのリポジトリ][sub]\n\n[blog]: http://37signals.com/svn/posts/3264-automating-with-convention-introducing-sub\n[sub]: https://github.com/37signals/sub\n[37signals]: http://37signals.com/\n"}]},"__N_SSG":true}